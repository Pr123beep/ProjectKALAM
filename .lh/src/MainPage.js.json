{
    "sourceFile": "src/MainPage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1743183637165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743183758205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import React, { useState, useEffect } from \"react\";\r\n import { copyData } from \"./copyData\";\r\n import FilterBar from \"./components/FilterBar\";\r\n import StartupCard from \"./components/StartupCard\";\r\n-import \"./MainPage.css\"; // Optional: add main pageâ€“specific styles or reuse App.css\r\n \r\n function MainPage() {\r\n   const [data, setData] = useState([]);\r\n   const [filters, setFilters] = useState({\r\n"
                },
                {
                    "date": 1743184019668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,113 +0,0 @@\n-// src/MainPage.js\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { copyData } from \"./copyData\";\r\n-import FilterBar from \"./components/FilterBar\";\r\n-import StartupCard from \"./components/StartupCard\";\r\n-\r\n-function MainPage() {\r\n-  const [data, setData] = useState([]);\r\n-  const [filters, setFilters] = useState({\r\n-    college: \"\",\r\n-    companyIndustry: \"\",\r\n-    currentLocation: \"\",\r\n-    followersMin: 0,\r\n-    followersMax: 50000\r\n-  });\r\n-  const [visibleCount, setVisibleCount] = useState(5);\r\n-  const [popupVisible, setPopupVisible] = useState(false);\r\n-\r\n-  // Shuffle and deduplicate data on mount\r\n-  useEffect(() => {\r\n-    const dataToShuffle = [...copyData];\r\n-    for (let i = dataToShuffle.length - 1; i > 0; i--) {\r\n-      const j = Math.floor(Math.random() * (i + 1));\r\n-      [dataToShuffle[i], dataToShuffle[j]] = [dataToShuffle[j], dataToShuffle[i]];\r\n-    }\r\n-    const deduped = Object.values(\r\n-      dataToShuffle.reduce((acc, item) => {\r\n-        const key = `${item.companyName}_${item.firstName}_${item.lastName}`;\r\n-        if (!acc[key]) {\r\n-          acc[key] = { ...item, colleges: [item.college] };\r\n-        } else {\r\n-          if (item.college && !acc[key].colleges.includes(item.college)) {\r\n-            acc[key].colleges.push(item.college);\r\n-          }\r\n-        }\r\n-        return acc;\r\n-      }, {})\r\n-    );\r\n-    setData(deduped);\r\n-  }, []);\r\n-\r\n-  const applyFilters = (newFilters) => {\r\n-    setFilters(newFilters);\r\n-    setVisibleCount(5);\r\n-    setPopupVisible(true);\r\n-    setTimeout(() => {\r\n-      setPopupVisible(false);\r\n-    }, 3000);\r\n-  };\r\n-\r\n-  const filteredData = data.filter((item) => {\r\n-    const collegeStr = Array.isArray(item.colleges)\r\n-      ? item.colleges.join(\" \").toLowerCase()\r\n-      : (item.college || \"\").toLowerCase();\r\n-    const industry = (item.companyIndustry || \"\").toLowerCase();\r\n-    const location = (\r\n-      item.currentLocation ||\r\n-      item.linkedinJobLocation ||\r\n-      item.linkedinPreviousJobLocation ||\r\n-      \"\"\r\n-    ).toLowerCase();\r\n-    const followers = item.linkedinFollowersCount || 0;\r\n-    return (\r\n-      collegeStr.includes(filters.college.toLowerCase()) &&\r\n-      industry.includes(filters.companyIndustry.toLowerCase()) &&\r\n-      location.includes(filters.currentLocation.toLowerCase()) &&\r\n-      followers >= filters.followersMin &&\r\n-      followers <= filters.followersMax\r\n-    );\r\n-  });\r\n-\r\n-  // Always randomize the displayed data\r\n-  let displayedData = [...filteredData];\r\n-  for (let i = displayedData.length - 1; i > 0; i--) {\r\n-    const j = Math.floor(Math.random() * (i + 1));\r\n-    [displayedData[i], displayedData[j]] = [displayedData[j], displayedData[i]];\r\n-  }\r\n-\r\n-  const handleLoadMore = () => {\r\n-    setVisibleCount((prev) => prev + 5);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"main-container app-container\">\r\n-      <aside className=\"sidebar\">\r\n-        <FilterBar onApplyFilters={applyFilters} />\r\n-      </aside>\r\n-      <main className=\"content\">\r\n-        {popupVisible && (\r\n-          <div className=\"filter-popup\">\r\n-            Found {displayedData.length} results.\r\n-          </div>\r\n-        )}\r\n-        {displayedData.length ? (\r\n-          <>\r\n-            {displayedData.slice(0, visibleCount).map((item, index) => (\r\n-              <StartupCard key={index} data={item} />\r\n-            ))}\r\n-            {visibleCount < displayedData.length && (\r\n-              <button className=\"load-more\" onClick={handleLoadMore}>\r\n-                Load More\r\n-              </button>\r\n-            )}\r\n-          </>\r\n-        ) : (\r\n-          <p className=\"no-results\">No matching results.</p>\r\n-        )}\r\n-      </main>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default MainPage;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743199910225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-\n+\r\n"
                },
                {
                    "date": 1743199915426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,2 @@\n \r\n+l\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743200582952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,113 @@\n+ // src/MainPage.js\r\n+import React, { useState, useEffect } from 'react';\r\n\\ No newline at end of file\n+import { copyData } from './copyData';\r\n+import FilterBar from './components/FilterBar';\r\n+import StartupCard from './components/StartupCard';\r\n+import './App.css';\r\n \r\n-l\n+function MainPage() {\r\n+  const [data, setData] = useState([]);\r\n+  const [filters, setFilters] = useState({\r\n+    college: '',\r\n+    companyIndustry: '',\r\n+    currentLocation: '',\r\n+    followersMin: 0,\r\n+    followersMax: 50000\r\n+  });\r\n+  const [visibleCount, setVisibleCount] = useState(5);\r\n+  const [popupVisible, setPopupVisible] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    const dataToShuffle = [...copyData];\r\n+    for (let i = dataToShuffle.length - 1; i > 0; i--) {\r\n+      const j = Math.floor(Math.random() * (i + 1));\r\n+      [dataToShuffle[i], dataToShuffle[j]] = [dataToShuffle[j], dataToShuffle[i]];\r\n+    }\r\n+    const deduped = Object.values(\r\n+      dataToShuffle.reduce((acc, item) => {\r\n+        const key = `${item.companyName}_${item.firstName}_${item.lastName}`;\r\n+        if (!acc[key]) {\r\n+          acc[key] = { ...item, colleges: [item.college] };\r\n+        } else {\r\n+          if (item.college && !acc[key].colleges.includes(item.college)) {\r\n+            acc[key].colleges.push(item.college);\r\n+          }\r\n+        }\r\n+        return acc;\r\n+      }, {})\r\n+    );\r\n+    setData(deduped);\r\n+  }, []);\r\n+\r\n+  const applyFilters = (newFilters) => {\r\n+    setFilters(newFilters);\r\n+    setVisibleCount(5);\r\n+    setPopupVisible(true);\r\n+    setTimeout(() => {\r\n+      setPopupVisible(false);\r\n+    }, 3000);\r\n+  };\r\n+\r\n+  const filteredData = data.filter((item) => {\r\n+    const collegeStr = Array.isArray(item.colleges)\r\n+      ? item.colleges.join(' ').toLowerCase()\r\n+      : (item.college || \"\").toLowerCase();\r\n+    const industry = (item.companyIndustry || \"\").toLowerCase();\r\n+    const location =\r\n+      (\r\n+        item.currentLocation ||\r\n+        item.linkedinJobLocation ||\r\n+        item.linkedinPreviousJobLocation ||\r\n+        \"\"\r\n+      ).toLowerCase();\r\n+    const followers = item.linkedinFollowersCount || 0;\r\n+    return (\r\n+      collegeStr.includes(filters.college.toLowerCase()) &&\r\n+      industry.includes(filters.companyIndustry.toLowerCase()) &&\r\n+      location.includes(filters.currentLocation.toLowerCase()) &&\r\n+      followers >= filters.followersMin &&\r\n+      followers <= filters.followersMax\r\n+    );\r\n+  });\r\n+\r\n+  let displayedData = [...filteredData];\r\n+  for (let i = displayedData.length - 1; i > 0; i--) {\r\n+    const j = Math.floor(Math.random() * (i + 1));\r\n+    [displayedData[i], displayedData[j]] = [displayedData[j], displayedData[i]];\r\n+  }\r\n+\r\n+  const handleLoadMore = () => {\r\n+    setVisibleCount(prev => prev + 5);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"app-container\">\r\n+      <aside className=\"sidebar\">\r\n+        <FilterBar onApplyFilters={applyFilters} />\r\n+      </aside>\r\n+      <main className=\"content\">\r\n+        {popupVisible && (\r\n+          <div className=\"filter-popup\">\r\n+            Found {displayedData.length} results.\r\n+          </div>\r\n+        )}\r\n+        {displayedData.length ? (\r\n+          <>\r\n+            {displayedData.slice(0, visibleCount).map((item, index) => (\r\n+              <StartupCard key={index} data={item} />\r\n+            ))}\r\n+            {visibleCount < displayedData.length && (\r\n+              <button className=\"load-more\" onClick={handleLoadMore}>\r\n+                Load More\r\n+              </button>\r\n+            )}\r\n+          </>\r\n+        ) : (\r\n+          <p className=\"no-results\">No matching results.</p>\r\n+        )}\r\n+      </main>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default MainPage;\r\n"
                },
                {
                    "date": 1743238206708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,113 +0,0 @@\n- // src/MainPage.js\r\n-import React, { useState, useEffect } from 'react';\r\n-import { copyData } from './copyData';\r\n-import FilterBar from './components/FilterBar';\r\n-import StartupCard from './components/StartupCard';\r\n-import './App.css';\r\n-\r\n-function MainPage() {\r\n-  const [data, setData] = useState([]);\r\n-  const [filters, setFilters] = useState({\r\n-    college: '',\r\n-    companyIndustry: '',\r\n-    currentLocation: '',\r\n-    followersMin: 0,\r\n-    followersMax: 50000\r\n-  });\r\n-  const [visibleCount, setVisibleCount] = useState(5);\r\n-  const [popupVisible, setPopupVisible] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    const dataToShuffle = [...copyData];\r\n-    for (let i = dataToShuffle.length - 1; i > 0; i--) {\r\n-      const j = Math.floor(Math.random() * (i + 1));\r\n-      [dataToShuffle[i], dataToShuffle[j]] = [dataToShuffle[j], dataToShuffle[i]];\r\n-    }\r\n-    const deduped = Object.values(\r\n-      dataToShuffle.reduce((acc, item) => {\r\n-        const key = `${item.companyName}_${item.firstName}_${item.lastName}`;\r\n-        if (!acc[key]) {\r\n-          acc[key] = { ...item, colleges: [item.college] };\r\n-        } else {\r\n-          if (item.college && !acc[key].colleges.includes(item.college)) {\r\n-            acc[key].colleges.push(item.college);\r\n-          }\r\n-        }\r\n-        return acc;\r\n-      }, {})\r\n-    );\r\n-    setData(deduped);\r\n-  }, []);\r\n-\r\n-  const applyFilters = (newFilters) => {\r\n-    setFilters(newFilters);\r\n-    setVisibleCount(5);\r\n-    setPopupVisible(true);\r\n-    setTimeout(() => {\r\n-      setPopupVisible(false);\r\n-    }, 3000);\r\n-  };\r\n-\r\n-  const filteredData = data.filter((item) => {\r\n-    const collegeStr = Array.isArray(item.colleges)\r\n-      ? item.colleges.join(' ').toLowerCase()\r\n-      : (item.college || \"\").toLowerCase();\r\n-    const industry = (item.companyIndustry || \"\").toLowerCase();\r\n-    const location =\r\n-      (\r\n-        item.currentLocation ||\r\n-        item.linkedinJobLocation ||\r\n-        item.linkedinPreviousJobLocation ||\r\n-        \"\"\r\n-      ).toLowerCase();\r\n-    const followers = item.linkedinFollowersCount || 0;\r\n-    return (\r\n-      collegeStr.includes(filters.college.toLowerCase()) &&\r\n-      industry.includes(filters.companyIndustry.toLowerCase()) &&\r\n-      location.includes(filters.currentLocation.toLowerCase()) &&\r\n-      followers >= filters.followersMin &&\r\n-      followers <= filters.followersMax\r\n-    );\r\n-  });\r\n-\r\n-  let displayedData = [...filteredData];\r\n-  for (let i = displayedData.length - 1; i > 0; i--) {\r\n-    const j = Math.floor(Math.random() * (i + 1));\r\n-    [displayedData[i], displayedData[j]] = [displayedData[j], displayedData[i]];\r\n-  }\r\n-\r\n-  const handleLoadMore = () => {\r\n-    setVisibleCount(prev => prev + 5);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"app-container\">\r\n-      <aside className=\"sidebar\">\r\n-        <FilterBar onApplyFilters={applyFilters} />\r\n-      </aside>\r\n-      <main className=\"content\">\r\n-        {popupVisible && (\r\n-          <div className=\"filter-popup\">\r\n-            Found {displayedData.length} results.\r\n-          </div>\r\n-        )}\r\n-        {displayedData.length ? (\r\n-          <>\r\n-            {displayedData.slice(0, visibleCount).map((item, index) => (\r\n-              <StartupCard key={index} data={item} />\r\n-            ))}\r\n-            {visibleCount < displayedData.length && (\r\n-              <button className=\"load-more\" onClick={handleLoadMore}>\r\n-                Load More\r\n-              </button>\r\n-            )}\r\n-          </>\r\n-        ) : (\r\n-          <p className=\"no-results\">No matching results.</p>\r\n-        )}\r\n-      </main>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default MainPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1743238215971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+ // src/MainPage.js\r\n+import React, { useState, useEffect } from 'react';\r\n+import { copyData } from './copyData';\r\n+import FilterBar from './components/FilterBar';\r\n+import StartupCard from './components/StartupCard';\r\n+import './App.css';\r\n+\r\n+function MainPage() {\r\n+  const [data, setData] = useState([]);\r\n+  const [filters, setFilters] = useState({\r\n+    college: '',\r\n+    companyIndustry: '',\r\n+    currentLocation: '',\r\n+    followersMin: 0,\r\n+    followersMax: 50000\r\n+  });\r\n+  const [visibleCount, setVisibleCount] = useState(5);\r\n+  const [popupVisible, setPopupVisible] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    const dataToShuffle = [...copyData];\r\n+    for (let i = dataToShuffle.length - 1; i > 0; i--) {\r\n+      const j = Math.floor(Math.random() * (i + 1));\r\n+      [dataToShuffle[i], dataToShuffle[j]] = [dataToShuffle[j], dataToShuffle[i]];\r\n+    }\r\n+    const deduped = Object.values(\r\n+      dataToShuffle.reduce((acc, item) => {\r\n+        const key = `${item.companyName}_${item.firstName}_${item.lastName}`;\r\n+        if (!acc[key]) {\r\n+          acc[key] = { ...item, colleges: [item.college] };\r\n+        } else {\r\n+          if (item.college && !acc[key].colleges.includes(item.college)) {\r\n+            acc[key].colleges.push(item.college);\r\n+          }\r\n+        }\r\n+        return acc;\r\n+      }, {})\r\n+    );\r\n+    setData(deduped);\r\n+  }, []);\r\n+\r\n+  const applyFilters = (newFilters) => {\r\n+    setFilters(newFilters);\r\n+    setVisibleCount(5);\r\n+    setPopupVisible(true);\r\n+    setTimeout(() => {\r\n+      setPopupVisible(false);\r\n+    }, 3000);\r\n+  };\r\n+\r\n+  const filteredData = data.filter((item) => {\r\n+    const collegeStr = Array.isArray(item.colleges)\r\n+      ? item.colleges.join(' ').toLowerCase()\r\n+      : (item.college || \"\").toLowerCase();\r\n+    const industry = (item.companyIndustry || \"\").toLowerCase();\r\n+    const location =\r\n+      (\r\n+        item.currentLocation ||\r\n+        item.linkedinJobLocation ||\r\n+        item.linkedinPreviousJobLocation ||\r\n+        \"\"\r\n+      ).toLowerCase();\r\n+    const followers = item.linkedinFollowersCount || 0;\r\n+    return (\r\n+      collegeStr.includes(filters.college.toLowerCase()) &&\r\n+      industry.includes(filters.companyIndustry.toLowerCase()) &&\r\n+      location.includes(filters.currentLocation.toLowerCase()) &&\r\n+      followers >= filters.followersMin &&\r\n+      followers <= filters.followersMax\r\n+    );\r\n+  });\r\n+\r\n+  let displayedData = [...filteredData];\r\n+  for (let i = displayedData.length - 1; i > 0; i--) {\r\n+    const j = Math.floor(Math.random() * (i + 1));\r\n+    [displayedData[i], displayedData[j]] = [displayedData[j], displayedData[i]];\r\n+  }\r\n+\r\n+  const handleLoadMore = () => {\r\n+    setVisibleCount(prev => prev + 5);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"app-container\">\r\n+      <aside className=\"sidebar\">\r\n+        <FilterBar onApplyFilters={applyFilters} />\r\n+      </aside>\r\n+      <main className=\"content\">\r\n+        {popupVisible && (\r\n+          <div className=\"filter-popup\">\r\n+            Found {displayedData.length} results.\r\n+          </div>\r\n+        )}\r\n+        {displayedData.length ? (\r\n+          <>\r\n+            {displayedData.slice(0, visibleCount).map((item, index) => (\r\n+              <StartupCard key={index} data={item} />\r\n+            ))}\r\n+            {visibleCount < displayedData.length && (\r\n+              <button className=\"load-more\" onClick={handleLoadMore}>\r\n+                Load More\r\n+              </button>\r\n+            )}\r\n+          </>\r\n+        ) : (\r\n+          <p className=\"no-results\">No matching results.</p>\r\n+        )}\r\n+      </main>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default MainPage;\r\n"
                }
            ],
            "date": 1743183637165,
            "name": "Commit-0",
            "content": "// src/MainPage.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { copyData } from \"./copyData\";\r\nimport FilterBar from \"./components/FilterBar\";\r\nimport StartupCard from \"./components/StartupCard\";\r\nimport \"./MainPage.css\"; // Optional: add main pageâ€“specific styles or reuse App.css\r\n\r\nfunction MainPage() {\r\n  const [data, setData] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    college: \"\",\r\n    companyIndustry: \"\",\r\n    currentLocation: \"\",\r\n    followersMin: 0,\r\n    followersMax: 50000\r\n  });\r\n  const [visibleCount, setVisibleCount] = useState(5);\r\n  const [popupVisible, setPopupVisible] = useState(false);\r\n\r\n  // Shuffle and deduplicate data on mount\r\n  useEffect(() => {\r\n    const dataToShuffle = [...copyData];\r\n    for (let i = dataToShuffle.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [dataToShuffle[i], dataToShuffle[j]] = [dataToShuffle[j], dataToShuffle[i]];\r\n    }\r\n    const deduped = Object.values(\r\n      dataToShuffle.reduce((acc, item) => {\r\n        const key = `${item.companyName}_${item.firstName}_${item.lastName}`;\r\n        if (!acc[key]) {\r\n          acc[key] = { ...item, colleges: [item.college] };\r\n        } else {\r\n          if (item.college && !acc[key].colleges.includes(item.college)) {\r\n            acc[key].colleges.push(item.college);\r\n          }\r\n        }\r\n        return acc;\r\n      }, {})\r\n    );\r\n    setData(deduped);\r\n  }, []);\r\n\r\n  const applyFilters = (newFilters) => {\r\n    setFilters(newFilters);\r\n    setVisibleCount(5);\r\n    setPopupVisible(true);\r\n    setTimeout(() => {\r\n      setPopupVisible(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const filteredData = data.filter((item) => {\r\n    const collegeStr = Array.isArray(item.colleges)\r\n      ? item.colleges.join(\" \").toLowerCase()\r\n      : (item.college || \"\").toLowerCase();\r\n    const industry = (item.companyIndustry || \"\").toLowerCase();\r\n    const location = (\r\n      item.currentLocation ||\r\n      item.linkedinJobLocation ||\r\n      item.linkedinPreviousJobLocation ||\r\n      \"\"\r\n    ).toLowerCase();\r\n    const followers = item.linkedinFollowersCount || 0;\r\n    return (\r\n      collegeStr.includes(filters.college.toLowerCase()) &&\r\n      industry.includes(filters.companyIndustry.toLowerCase()) &&\r\n      location.includes(filters.currentLocation.toLowerCase()) &&\r\n      followers >= filters.followersMin &&\r\n      followers <= filters.followersMax\r\n    );\r\n  });\r\n\r\n  // Always randomize the displayed data\r\n  let displayedData = [...filteredData];\r\n  for (let i = displayedData.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [displayedData[i], displayedData[j]] = [displayedData[j], displayedData[i]];\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    setVisibleCount((prev) => prev + 5);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container app-container\">\r\n      <aside className=\"sidebar\">\r\n        <FilterBar onApplyFilters={applyFilters} />\r\n      </aside>\r\n      <main className=\"content\">\r\n        {popupVisible && (\r\n          <div className=\"filter-popup\">\r\n            Found {displayedData.length} results.\r\n          </div>\r\n        )}\r\n        {displayedData.length ? (\r\n          <>\r\n            {displayedData.slice(0, visibleCount).map((item, index) => (\r\n              <StartupCard key={index} data={item} />\r\n            ))}\r\n            {visibleCount < displayedData.length && (\r\n              <button className=\"load-more\" onClick={handleLoadMore}>\r\n                Load More\r\n              </button>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <p className=\"no-results\">No matching results.</p>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n"
        }
    ]
}